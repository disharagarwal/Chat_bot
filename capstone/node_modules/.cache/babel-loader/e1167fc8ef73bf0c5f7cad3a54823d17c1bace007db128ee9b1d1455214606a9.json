{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem6\\\\Capstone\\\\capstone\\\\src\\\\App.js\";\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [{\n  id: '0',\n  message: 'Hey Geek!',\n  trigger: '1'\n}, {\n  id: '1',\n  // This message appears in\n  // the bot chat bubble\n  message: 'Please write your username',\n  trigger: '2'\n}, {\n  id: '2',\n  // Here we want the user\n  // to enter input\n  user: true,\n  trigger: '3'\n}, {\n  id: '3',\n  message: \" hi {previousValue}, how can I help you?\",\n  trigger: 4\n}, {\n  id: '4',\n  options: [\n  // When we need to show a number of\n  // options to choose we create alist\n  // like this\n  {\n    value: 1,\n    label: 'View Courses'\n  }, {\n    value: 2,\n    label: 'Read Articles'\n  }],\n  end: true\n}];\n\n// Creating our own theme\nconst theme = {\n  background: '#C9FF8F',\n  headerBgColor: '#197B22',\n  headerFontSize: '20px',\n  botBubbleColor: '#0F3789',\n  headerFontColor: 'white',\n  botFontColor: 'white',\n  userBubbleColor: '#FF5733',\n  userFontColor: 'white'\n};\n\n// Set some properties of the bot\nconst config = {\n  botAvatar: \"img.png\",\n  floating: true\n};\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(ChatBot\n\n      // This appears as the header\n      // text for the chat bot\n      , {\n        headerTitle: \"GeekBot\",\n        steps: steps + 1,\n        ...config\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ChatBot","ThemeProvider","jsxDEV","_jsxDEV","steps","id","message","trigger","user","options","value","label","end","theme","background","headerBgColor","headerFontSize","botBubbleColor","headerFontColor","botFontColor","userBubbleColor","userFontColor","config","botAvatar","floating","App","className","children","headerTitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sem6/Capstone/capstone/src/App.js"],"sourcesContent":["import ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\n\nconst steps = [\n\t{\n\t\tid: '0',\n\t\tmessage: 'Hey Geek!',\n\t\ttrigger: '1',\n\t}, {\n\t\tid: '1',\n\n\t\t// This message appears in\n\t\t// the bot chat bubble\n\t\tmessage: 'Please write your username',\n\t\ttrigger: '2'\n\t}, {\n\t\tid: '2',\n\n\t\t// Here we want the user\n\t\t// to enter input\n\t\tuser: true,\n\t\ttrigger: '3',\n\t}, {\n\t\tid: '3',\n\t\tmessage: \" hi {previousValue}, how can I help you?\",\n\t\ttrigger: 4\n\t}, {\n\t\tid: '4',\n\t\toptions: [\n\t\t\t\n\t\t\t// When we need to show a number of\n\t\t\t// options to choose we create alist\n\t\t\t// like this\n\t\t\t{ value: 1, label: 'View Courses' },\n\t\t\t{ value: 2, label: 'Read Articles' },\n\n\t\t],\n\t\tend: true\n\t}\n];\n\n// Creating our own theme\nconst theme = {\n\tbackground: '#C9FF8F',\n\theaderBgColor: '#197B22',\n\theaderFontSize: '20px',\n\tbotBubbleColor: '#0F3789',\n\theaderFontColor: 'white',\n\tbotFontColor: 'white',\n\tuserBubbleColor: '#FF5733',\n\tuserFontColor: 'white',\n};\n\n// Set some properties of the bot\nconst config = {\n\tbotAvatar: \"img.png\",\n\tfloating: true,\n};\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<ChatBot\n\n\t\t\t\t\t// This appears as the header\n\t\t\t\t\t// text for the chat bot\n\t\t\t\t\theaderTitle=\"GeekBot\"\n\t\t\t\t\tsteps={steps+1}\n\t\t\t\t\t{...config}\n\n\t\t\t\t/>\n\t\t\t</ThemeProvider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,SAASC,aAAa,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAG,CACb;EACCC,EAAE,EAAE,GAAG;EACPC,OAAO,EAAE,WAAW;EACpBC,OAAO,EAAE;AACV,CAAC,EAAE;EACFF,EAAE,EAAE,GAAG;EAEP;EACA;EACAC,OAAO,EAAE,4BAA4B;EACrCC,OAAO,EAAE;AACV,CAAC,EAAE;EACFF,EAAE,EAAE,GAAG;EAEP;EACA;EACAG,IAAI,EAAE,IAAI;EACVD,OAAO,EAAE;AACV,CAAC,EAAE;EACFF,EAAE,EAAE,GAAG;EACPC,OAAO,EAAE,0CAA0C;EACnDC,OAAO,EAAE;AACV,CAAC,EAAE;EACFF,EAAE,EAAE,GAAG;EACPI,OAAO,EAAE;EAER;EACA;EACA;EACA;IAAEC,KAAK,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAe,CAAC,EACnC;IAAED,KAAK,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAgB,CAAC,CAEpC;EACDC,GAAG,EAAE;AACN,CAAC,CACD;;AAED;AACA,MAAMC,KAAK,GAAG;EACbC,UAAU,EAAE,SAAS;EACrBC,aAAa,EAAE,SAAS;EACxBC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE,SAAS;EACzBC,eAAe,EAAE,OAAO;EACxBC,YAAY,EAAE,OAAO;EACrBC,eAAe,EAAE,SAAS;EAC1BC,aAAa,EAAE;AAChB,CAAC;;AAED;AACA,MAAMC,MAAM,GAAG;EACdC,SAAS,EAAE,SAAS;EACpBC,QAAQ,EAAE;AACX,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EACd,oBACCtB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,eACnBxB,OAAA,CAACF,aAAa;MAACY,KAAK,EAAEA,KAAM;MAAAc,QAAA,eAC3BxB,OAAA,CAACH;;MAEA;MACA;MAAA;QACA4B,WAAW,EAAC,SAAS;QACrBxB,KAAK,EAAEA,KAAK,GAAC,CAAE;QAAA,GACXkB;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAER;AAACC,EAAA,GAhBQR,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}